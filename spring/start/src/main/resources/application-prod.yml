admin:
  admin-enable: false
  webSocket-address: 127.0.0.1

#mybatis-plus:
#  configuration:
#    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl # 控制台打印 sql

server:
  port: 9527

spring:

  elasticsearch:
    username: elastic
    password:
    uris: http://localhost:9200

  jackson:
    date-format: yyyy-MM-dd HH:mm:ss # Date 类型的时间格式
    time-zone: GMT+8

  main:
    allow-bean-definition-overriding: true # 允许 bean被覆盖，就是支持：@Primary注解

  servlet:
    multipart: # 配置文件上传大小限制
      max-file-size: 100MB
      max-request-size: 100MB

  mvc:
    hiddenmethod:
      filter:
        enabled: true # 解决上传文件报错

  redis:
    password:
    host: localhost
    port: 6379

  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://${spring.redis.host}:3306/admin-project?characterEncoding=utf-8&useUnicode=true&&useSSL=false&serverTimezone=UTC&allowMultiQueries=true&rewriteBatchedStatements=true
    username: root
    password: ${spring.redis.password}
    hikari:
      minimum-idle: 10 # 最小闲置连接数
      max-lifetime: 30000 # 一个连接的生命时长（毫秒），超时而且没被使用则被释放（retired），缺省:30分钟，建议设置比数据库超时时长少30秒，参考MySQL wait_timeout参数（show variables like '%timeout%';）

  kafka:
    bootstrap-servers: ${spring.redis.host}:9092
    properties: # 配置连接 kafka的密码
      security:
        protocol: SASL_PLAINTEXT
      sasl:
        mechanism: PLAIN
        jaas:
          config: 'org.apache.kafka.common.security.scram.ScramLoginModule required username="${spring.datasource.username}" password="${spring.redis.password}";'
    consumer:
      enable-auto-commit: false # 为了：ack-mode: manual_immediate，设置为 true，则 ack-mode不会生效
      auto-offset-reset: earliest # 当各分区下有已提交的offset时，从提交的offset开始消费；无提交的offset时，从头开始消费
      fetch-max-wait: 100 # 降低消费者拉取消息的延迟（ms），默认 500
    listener:
      ack-mode: manual_immediate # 手动调用 Acknowledgment.acknowledge() 后立即提交

minio:
  endpoint: http://${spring.redis.host}:9000 # 文件上传时的地址
  accessKey: accessKey
  secretKey: secretKey

xxl:
  job:
    admin:
      ### 调度中心部署跟地址 [选填]：如调度中心集群部署存在多个地址则用逗号分隔。执行器将会使用该地址进行"执行器心跳注册"和"任务结果回调"；为空则关闭自动注册；
      addresses: http://${spring.redis.host}:8335/xxl-job-admin
      userName: admin
      password: ${spring.redis.password}
    ### 执行器通讯TOKEN [选填]：非空时启用；
    accessToken: accessToken
    executor:
      ### 执行器AppName [选填]：执行器心跳注册分组依据；为空则关闭自动注册
      appname: xxl-job-executor-main
      ### xxl-job executor registry-address: default use address to registry , otherwise use ip:port if address is null
      address:
      ### 执行器IP [选填]：默认为空表示自动获取IP，多网卡时可手动设置指定IP，该IP不会绑定Host仅作为通讯实用；地址信息用于 "执行器注册" 和 "调度中心请求并触发任务"；
      ip:
      ### 执行器端口号 [选填]：默认端口为9999，单机部署多个执行器时，注意要配置不同执行器端口；
      port: 8336 # 8335 是定时任务的调度中心 端口，备注：这里加个 1：8336，好记一些
      ### 执行器运行日志文件存储磁盘路径 [选填] ：需要对该路径拥有读写权限；为空则使用默认路径；
      logpath: /data/applogs/xxl-job/jobhandler
      ### 执行器日志保存天数 [选填] ：值大于3时生效，启用执行器Log文件定期清理功能，否则不生效；
      logretentiondays: 1
